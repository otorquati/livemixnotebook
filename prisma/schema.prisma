// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  emailVerified String
  image         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Notebook      Notebook[]
}

model Editons {
  id        String     @id @default(uuid())
  editionId String
  createAt  DateTime   @default(now())
  upadtedAt DateTime   @updatedAt
  Playlist  Playlist[]
}

model Playlist {
  id              String  @id @default(uuid())
  editionId       String
  editionRelation Editons @relation(fields: [editionId], references: [id])
  songId          String
  songRelation    Songs   @relation(fields: [songId], references: [id])
  playlistOrder   Int
}

model Songs {
  id         String     @id @default(uuid())
  title      String
  Artist     String
  sampleAddr String?
  playlist   Playlist[]
  notebook   Notebook[]
}

model Notebook {
  id           String   @id @default(cuid())
  userId       String
  userRelation Users    @relation(fields: [userId], references: [id])
  songId       String
  songRelation Songs    @relation(fields: [songId], references: [id])
  ranking      Int
  createAt     DateTime @default(now())
  upadtedAt    DateTime @updatedAt
}
